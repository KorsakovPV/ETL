version: '3.7'
volumes:
  postgres_data:
  static_volume:
  es_data:


services:
  db:
    container_name: postgres
    image: postgres:13
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/

  admin_panel:
    container_name: admin_panel
    build: movies_admin/.
#      context: .
#      dockerfile: Dockerfile_movies_admin
    restart: always
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    volumes:
      - ./movies_admin/config/static:/code/static
    depends_on:
      - db

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
    ports:
      - '9200:9200'
    environment:
      - discovery.type=single-node
    volumes:
      - es_data:/usr/share/elasticsearch/data

  etl:
    build: postgres_to_es/.
    command: sh wait_to_start.sh
    environment:
#      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
#      - POSTGRES_DB=${POSTGRES_DB}
#      - ES_HOST=${ES_HOST}
      - WAIT_COMMAND=[ $$(curl --write-out %{http_code} --silent --output /dev/null http://es:9200/_cat/health?h=st) = 200 ]
      - WAIT_START_CMD=python -u etl.py
      - WAIT_SLEEP=5
      - WAIT_LOOPS=10
    volumes:
      - ./postgres_to_es:/etl
    depends_on:
      - es
      - admin_panel



  nginx:
    image: nginx:1.19.3
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./movies_admin/config/static:/code/static

    ports:
      - "80:80"
    depends_on:
      - admin_panel
